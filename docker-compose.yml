version: '3'

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: docker/airflow/Dockerfile
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__FERNET_KEY: ''
    PYTHONPATH: /opt/airflow/dags:/opt/airflow/plugins:/opt/airflow
    AIRFLOW_VAR_smtp_server: ${AIRFLOW_VAR_smtp_server:-smtp.gmail.com}
    AIRFLOW_VAR_smtp_port: ${AIRFLOW_VAR_smtp_port:-587}
    AIRFLOW_VAR_alert_sender_email: ${AIRFLOW_VAR_alert_sender_email}
    AIRFLOW_VAR_alert_recipient_email: ${AIRFLOW_VAR_alert_recipient_email}
    AIRFLOW_VAR_smtp_username: ${AIRFLOW_VAR_smtp_username}
    AIRFLOW_VAR_smtp_password: ${AIRFLOW_VAR_smtp_password}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./src:/opt/airflow/src
    - ./data:/opt/airflow/data
  depends_on: &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 20s
      timeout: 10s
      retries: 10
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "
      mkdir -p /opt/airflow/logs /opt/airflow/logs/scheduler &&
      chmod -R 777 /opt/airflow/logs &&
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname Admin --role Admin --email admin@example.com &&
      sleep 5"
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-admin}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-admin}

volumes:
  postgres-db-volume:
