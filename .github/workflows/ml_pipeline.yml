name: ML Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'models/**'
      - 'data/**'
      - 'config/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

jobs:
  train-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Setup Credentials
        run: |
          mkdir -p credentials
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > credentials/latest.json
          chmod 600 credentials/latest.json  # Set proper permissions

      - name: Verify Credentials
        run: |
          if [ ! -f "credentials/latest.json" ]; then
            echo "Credentials file not found!"
            exit 1
          fi
          echo "Credentials file exists"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy yfinance scikit-learn
          pip install -r modelrequire.txt

      - name: Train model
        id: training
        run: python -m models.train
        continue-on-error: true

      - name: Validate model
        if: steps.training.outcome == 'success'
        id: validation
        run: |
          echo "Starting model validation..."
          python scripts/validate_model.py
          validation_status=$?
          if [ $validation_status -eq 0 ]; then
            echo "validation_passed=true" >> $GITHUB_ENV
          else
            echo "validation_passed=false" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Log status
        if: always()
        run: |
          if [ "${{ steps.training.outcome }}" == "success" ]; then
            echo "Model training completed successfully"
          else
            echo "Model training failed"
          fi
