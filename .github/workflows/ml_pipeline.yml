jobs:
  data_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Docker network
        run: docker network create airflow-network

      - name: Create directories
        run: |
          mkdir -p ./dags ./logs ./plugins ./data/raw ./data/processed ./data/mitigated ./data/dvc_tracked
          chmod -R 777 ./logs ./data

      - name: Start Postgres
        run: |
          docker run -d \
            --name postgres \
            --network airflow-network \
            -e POSTGRES_USER=airflow \
            -e POSTGRES_PASSWORD=airflow \
            -e POSTGRES_DB=airflow \
            postgres:13

      - name: Build Airflow Image
        run: |
          docker build -t airflow_custom -f docker/airflow/Dockerfile .

      - name: Start Airflow
        run: |
          docker run -d \
            --name airflow \
            --network airflow-network \
            -e AIRFLOW__CORE__SQL_ALCHEMY_CONN="postgresql+psycopg2://airflow:airflow@postgres/airflow" \
            -e AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="postgresql+psycopg2://airflow:airflow@postgres/airflow" \
            -e AIRFLOW__CORE__EXECUTOR=LocalExecutor \
            -e AIRFLOW__CORE__LOAD_EXAMPLES=False \
            -v ${{ github.workspace }}/dags:/opt/airflow/dags \
            -v ${{ github.workspace }}/logs:/opt/airflow/logs \
            -v ${{ github.workspace }}/plugins:/opt/airflow/plugins \
            -v ${{ github.workspace }}/data:/opt/airflow/data \
            airflow_custom

      - name: Initialize Airflow
        run: |
          echo "Waiting for services to be ready..."
          sleep 30  # Increase the sleep time if necessary

          # Wait for Airflow to be ready
          until curl -s http://localhost:8080; do
            echo "Waiting for Airflow webserver to be available..."
            sleep 5
          done
          
          echo "Initializing Airflow DB..."
          docker exec airflow airflow db init

          echo "Creating Airflow user..."
          docker exec airflow airflow users create \
            --username admin \
            --password admin \
            --firstname Anonymous \
            --lastname Admin \
            --role Admin \
            --email admin@example.com

      - name: Run DAG
        run: |
          echo "Available DAGs:"
          docker exec airflow airflow dags list
          
          echo "Unpausing DAG:"
          docker exec airflow airflow dags unpause stock_prediction_pipeline
          
          echo "Triggering DAG:"
          docker exec airflow airflow dags trigger stock_prediction_pipeline
          
          echo "Waiting for DAG to complete..."
          sleep 300  # 5 minutes wait, adjust based on your DAG's runtime

      - name: Check DAG output
        run: |
          echo "Checking mitigated data files..."
          ls -l data/mitigated/
          ls -l data/dvc_tracked/

      - name: Set up DVC
        uses: iterative/setup-dvc@v1

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Track with DVC and Push
        run: |
          dvc add data/dvc_tracked/*.csv
          git add data/dvc_tracked/*.dvc
          git commit -m "ci: add mitigated data to dvc"
          dvc push
